# version: "3.8"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka_net

  kafka:
    image: confluentinc/cp-server:7.6.0
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    networks:
      kafka_net:
      starrocks_net:
        ipv4_address: 10.5.0.6
    

  schema-registry:
    image: confluentinc/cp-schema-registry:7.6.0
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - kafka
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - kafka_net
      

  connect:
    image: cnfldemos/cp-server-connect-datagen:0.6.2-7.5.0
    hostname: connect
    container_name: connect
    depends_on:
      - zookeeper
      - kafka
    ports:
      - "8083:8083"
    networks:
      - kafka_net
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:29092
      CONNECT_REST_PORT: 8083
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_ZOOKEEPER_CONNECT: zookeeper:2181
     # CONNECT_PLUGIN_PATH: /usr/share/java
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-7.6.0.jar
     # CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
     # CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: "org.apache.kafka.connect.runtime.rest=WARN,org.reflections=ERROR"
  
  control-center:
    image: confluentinc/cp-enterprise-control-center:7.6.0
    hostname: control-center
    container_name: control-center
    depends_on:
      - kafka
      - schema-registry
      - connect
    ports:
      - "9021:9021"
    networks:
      - kafka_net
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: 'kafka:29092'
      CONTROL_CENTER_CONNECT_CONNECT-DEFAULT_CLUSTER: 'connect:8083'
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONFLUENT_METRICS_TOPIC_REPLICATION: 1
      PORT: 9021

  prometheus:
    image: prom/prometheus:v2.45.6
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      starrocks_net:
        ipv4_address: 10.5.0.7

  grafana:
    image: grafana/grafana:10.4.4
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      starrocks_net:
        ipv4_address: 10.5.0.8

  fe:
    image: starrocks/fe-ubuntu:3.3.0-rc01
    hostname: fe
    container_name: fe
    user: root
    command:
      /opt/starrocks/fe/bin/start_fe.sh
    ports:
      - 8030:8030
      - 9020:9020
      - 9030:9030
    deploy:
      resources:
        limits:
          cpus: '16.0'       
          memory: 16G
    healthcheck:
      test: 'mysql -uroot -h10.5.0.2 -P 9030 -e "show frontends\G" |grep "Alive: true"'
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
#      - fe.conf:/opt/cluster/fe/conf/fe.conf
      - ./cluster/fe/meta:/opt/cluster/fe/meta
      - ./cluster/fe/log:/opt/cluster/fe/log
      - ./benchmark/:/benchmark
    networks:
      starrocks_net:
        ipv4_address: 10.5.0.2
    privileged: true

  be-1:
    image: starrocks/be-ubuntu:3.3.0-rc01
    command:
      - /bin/bash
      - -c
      - |
        sleep 15s; mysql --connect-timeout 2 -h fe -P9030 -uroot -e "alter system add backend \"be-1:9050\";"
        /opt/starrocks/be/bin/start_be.sh
    # ports:
    #    - 8041:8040
    hostname: be-1
    container_name: be-1
    user: root
    depends_on:
      - fe
    deploy:
      resources:
        limits:
          cpus: '16.0'       
          memory: 16G
    healthcheck:
      test: 'mysql -uroot -h10.5.0.2 -P 9030 -e "show backends\G" |grep "Alive: true"'
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
#      - be.conf:/opt/cluster/be/conf/be.conf
      - ./cluster/be-1/storage:/opt/starrocks/be/storage
      - ./cluster/be-1/log:/opt/starrocks/be/log
    networks:
      starrocks_net:
        ipv4_address: 10.5.0.3

  be-2:
    image: starrocks/be-ubuntu:3.3.0-rc01
    command:
      - /bin/bash
      - -c
      - |
        sleep 15s; mysql --connect-timeout 2 -h fe -P9030 -uroot -e "alter system add backend \"be-2:9050\";"
        /opt/starrocks/be/bin/start_be.sh
    # ports:
    #    - 8042:8040
    hostname: be-2
    container_name: be-2
    user: root
    depends_on:
      - fe
    deploy:
      resources:
        limits:
          cpus: '16.0'       
          memory: 16G
    healthcheck:
      test: 'mysql -uroot -h10.5.0.2 -P 9030 -e "show backends\G" |grep "Alive: true"'
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
##      - be.conf:/opt/cluster/be/conf/be.conf
      - ./cluster/be-2/storage:/opt/starrocks/be/storage
      - ./cluster/be-2/log:/opt/starrocks/be/log
    networks:
      starrocks_net:
        ipv4_address: 10.5.0.4


  be-3:
    image: starrocks/be-ubuntu:3.3.0-rc01
    command:
      - /bin/bash 
      - -c
      - |
        sleep 15s; mysql --connect-timeout 2 -h fe -P9030 -uroot -e "alter system add backend \"be-3:9050\";"
        /opt/starrocks/be/bin/start_be.sh
    # ports:
    #    - 8043:8040
    hostname: be-3
    container_name: be-3
    user: root
    depends_on:
      - fe
    deploy:
      resources:
        limits:
          cpus: '16.0'       
          memory: 16G
    healthcheck:
      test: 'mysql -uroot -h10.5.0.2 -P 9030 -e "show backends\G" |grep "Alive: true"'
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
#      - be.conf:/opt/cluster/be/conf/be.conf
      - ./cluster/be-3/storage:/opt/starrocks/be/storage
      - ./cluster/be-3/log:/opt/starrocks/be/log
    networks:
      starrocks_net:
        ipv4_address: 10.5.0.5


networks:
  kafka_net:
  starrocks_net:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/16
          gateway: 10.5.0.1


